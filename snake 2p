#include <iostream>
#include <ctime>
#include <windows.h>
#define LX 30
#define LY 30
using namespace std;
INPUT_RECORD InputRecord;DWORD Events;
HANDLE hout =GetStdHandle(STD_OUTPUT_HANDLE);
HANDLE hin =GetStdHandle(STD_INPUT_HANDLE);
void gotoxy(int x,int y);void border(int lx,int ly);
void color(int c);void tail();
int lx=LX,ly=LY,hx[2],hy[2],ax,ay,tx[2],ty[2],tx1[2],ty1[2],i,j,d[2],sc,d1[2];
int t,ti=7000/(lx+ly),hs=0,cc=170,cs=255,cf=15,cm=204,cb=15,bx,by,p1=0;
int s[50][50],hx1[2],hy1[2];
bool g,p=true;
int main()
{
    SMALL_RECT DisplayArea= {0,0,lx+25,ly+3};
    SetConsoleWindowInfo(hout,TRUE,&DisplayArea);
    //cout<<"LaturaX:";cin>>lx;
    //cout<<"LaturaY:";cin>>ly;
    INC1:
    system("CLS");
    gotoxy(4,0);color(cf);cout<<" or not (use arrows and enter)";
    gotoxy(0,0);
    if(p1==0)
    {
        color(12);cout<<"Wall";
    }else
    {
        color(cf);cout<<"Wall or ";
        color(12);cout<<"not";
    }
    while(!GetAsyncKeyState(VK_RETURN))
    {
        if(GetAsyncKeyState(VK_ESCAPE))
            goto FIN1;
        if(GetAsyncKeyState(VK_RIGHT)&&p1==0)
        {
            gotoxy(0,0);p1=1;
            color(cf);cout<<"Wall or ";
            color(12);cout<<"not";
        }
        if(GetAsyncKeyState(VK_LEFT)&&p1==1)
        {
            gotoxy(0,0);p1=0;
            color(12);cout<<"Wall";
            color(cf);cout<<" or not";
        }
    }if(p1==0)p=true;else p=false;
    color(cf);
    INC:srand (time(NULL));
    d[0]=0;sc=0;d1[0]=0;t=ti;g=false;
    d[1]=0;d1[1]=0;
    system("CLS");
    gotoxy(lx+5,3);cout<<"High scor ";
    gotoxy(lx+5,4);cout<<"Scor ";
    gotoxy(lx+5,5);cout<<"Speed ";
    for(i=0;i<ly+1;i++)for(j=0;j<lx+1;j++)s[j][i]=0;//initializam vectorul 2D cu 0
    for(i=0;i<lx+1;i++){s[i][0]=7;s[i][ly+1]=7;}//  initializam marginile
    for(i=0;i<ly+1;i++){s[0][i]=7;s[lx+1][i]=7;}
    border(lx,ly);
    hx[0]=lx/2;  hy[0]=ly/2;  tx[0]=hx[0];ty[0]=hy[0];// mijlocul terenului
    hx[1]=lx/2-1;hy[1]=ly/2-1;tx[1]=hx[1];ty[1]=hy[1];
    ax=rand()%(lx)+1;ay=rand()%(ly)+1;// primul mar
    color(cm);gotoxy(ax,ay);cout<<'X';
    s[ax][ay]=5;
    ax=rand()%(lx)+1;ay=rand()%(ly)+1;// primul mar
    color(cm);gotoxy(ax,ay);cout<<'X';
    color(cf);s[ax][ay]=5;
    while(g==false)
    {
        hx1[0]=hx[0];hy1[0]=hy[0];
        hx1[1]=hx[1];hy1[1]=hy[1];
        if(GetAsyncKeyState(VK_ESCAPE))
            goto INC1;
        if(GetAsyncKeyState(VK_UP))     d[0]1=1;//Directiile
        if(GetAsyncKeyState(VK_DOWN))   d[0]1=3;
        if(GetAsyncKeyState(VK_LEFT))   d[0]1=4;
        if(GetAsyncKeyState(VK_RIGHT))  d[0]1=2;
        if((d1[0]!=d[0])&&((d1[0]%2==0&&d[0]%2!=0)||(d1[0]%2!=0&&d[0]%2==0))||(sc==0))
            d[0]=d1[0];
        s[hx[0]][hy[0]]=d[0];
        switch(d[0])
        {
        case 1:hy[0]--;break;
        case 2:hx[0]++;break;
        case 3:hy[0]++;break;
        case 4:hx[0]--;break;
        }//Noua pozitie a capului
        if(p==false)
        {
            if(hx[0]==lx+1)hx[0]=1;
            if(hy[0]==ly+1)hy[0]=1;
            if(hx[0]==0)hx[0]=lx;
            if(hy[0]==0)hy[0]=ly;
        }
        if(s[hx[0]][hy[0]]!=0)
        {
            if(s[hx[0]][hy[0]]==5)//Nou mar
            {
                sc++;
                t-=2;
                RET:
                ax=rand()%(lx-3)+1;
                ay=rand()%(ly-3)+1;
                if(s[ax][ay]!=0||ax>lx-2||ay>ly-2)
                    goto RET;
                color(cm);
                gotoxy(ax,ay);cout<<'X';
                s[ax][ay]=5;
                color(cf);
            }else
            if(hx[0]==tx[0]&&hy[0]==ty[0])
                tail();
            else
                goto FIN;
        }
        else// stergem coada si inlocuim pozitia ei
            tail();
        if(sc>0){
            color(cs);// schimba culoarea capului
            gotoxy(hx1[0],hy1[0]);cout<<'0';
        }
        color(cc);
        gotoxy(hx[0],hy[0]);cout<<'0';//CAPUL
        color(cf);
        gotoxy(lx+15,3);cout<<hs;
        gotoxy(lx+10,4);cout<<sc;
        gotoxy(lx+12,5);cout<<"   ";
        gotoxy(lx+12,5);cout<<ti-t;
        Sleep(t);
    }
    FIN:
    if(sc>hs)// schimbam scorul maxim
        hs=sc;
    goto INC;
    FIN1:
    return 0;
}
void color(int c)
{
    SetConsoleTextAttribute(hout,c);
}
void gotoxy(int x,int y)
{
    COORD coord;
    coord.X=x;
    coord.Y=y;
    SetConsoleCursorPosition(hout,coord);
}
void border(int lx,int ly)
{
    color(cb);
    gotoxy(0,0);
    for(i=0;i<lx+2;i++)
        cout<<'-';
    cout<<'\n';
    for(i=0;i<ly;i++)
    {
        cout<<'|';
        for(j=0;j<lx;j++)
            cout<<' ';
        cout<<"|\n";
    }
    for(i=0;i<lx+2;i++)
        cout<<'-';
}
void tail()
{
    color(cf);
    tx[0]1=tx[0];ty[0]1=ty[0];
    gotoxy(tx[],ty[]);cout<<' ';
    if(s[tx[0]][ty[0]]==1)ty[0]--;else
    if(s[tx[0]][ty[0]]==2)tx[0]++;else
    if(s[tx[0]][ty[0]]==3)ty[0]++;else
    if(s[tx[0]][ty[0]]==4)tx[0]--;
    if(p==false)
    {
        if(tx[0]==lx+1)tx[0]=1;
        if(ty[0]==ly+1)ty[0]=1;
        if(tx[0]==0)tx[0]=lx;
        if(ty[0]==0)ty[0]=ly;
    }
    s[tx1[0]][ty1[0]]=0;
}
