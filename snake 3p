#include <iostream>
#include <ctime>
#include <windows.h>
#define LX 30
#define LY 30
using namespace std;
INPUT_RECORD InputRecord;DWORD Events;
HANDLE hout =GetStdHandle(STD_OUTPUT_HANDLE);
HANDLE hin =GetStdHandle(STD_INPUT_HANDLE);
void gotoxy(int x,int y);void border(int lx,int ly);
void color(int c);void tail(int i);
int lx=LX,ly=LY,hx[3],hy[3],ax,ay,tx[3],ty[3],tx1[3],ty1[3],i,j,d[3],sc[3],d1[3];
int t,ti=200,hs=0,cc=170,cs=255,cf=15,cm=204,cb=15,bx,by,p1=0,z=3;
int s[50][50],hx1[2],hy1[2];
bool g,p=true;
int main()
{
    SMALL_RECT DisplayArea= {0,0,lx+25,ly+3};
    SetConsoleWindowInfo(hout,TRUE,&DisplayArea);
    INC1:system("CLS");
    gotoxy(4,0);color(cf);cout<<" or not (use arrows and enter)";gotoxy(0,0);
    if(p1==0){color(12);cout<<"Wall";}else
    {
        color(cf);cout<<"Wall or ";
        color(12);cout<<"not";
    }
    while(!GetAsyncKeyState(VK_RETURN))
    {
        if(GetAsyncKeyState(VK_ESCAPE))goto FIN1;
        if(GetAsyncKeyState(VK_RIGHT)&&p1==0)
        {
            gotoxy(0,0);p1=1;
            color(cf);cout<<"Wall or ";
            color(12);cout<<"not";
        }
        if(GetAsyncKeyState(VK_LEFT)&&p1==1)
        {
            gotoxy(0,0);p1=0;
            color(12);cout<<"Wall";
            color(cf);cout<<" or not";
        }
    }if(p1==0)p=true;else p=false;
    color(cf);INC:srand (time(NULL));t=ti;g=false;
    for(i=0;i<ly+1;i++)for(j=0;j<lx+1;j++)s[j][i]=0;//initializam vectorul 2D cu 0
    for(i=0;i<lx+1;i++){s[i][0]=7;s[i][ly+1]=7;}//  initializam marginile
    for(i=0;i<ly+1;i++){s[0][i]=7;s[lx+1][i]=7;}
    system("CLS");border(lx,ly);
    for(i=0;i<z;i++)
    {
        d[i]=0;sc[i]=0;d1[i]=0;
        hx[i]=lx/2-i*2;  hy[i]=ly/2+i*2;tx[i]=hx[i];ty[i]=hy[i];
        ax=rand()%(lx)+1;ay=rand()%(ly)+1;// primul mar
        color(cm);gotoxy(ax,ay);cout<<'X';
        color(cf);s[ax][ay]=5;
    }
    gotoxy(lx+5,3);cout<<"High scor ";
    gotoxy(lx+5,4);cout<<"Scor ";
    gotoxy(lx+5,5);cout<<"Speed ";
    while(1)
    {
        for(i=0;i<z;i++)
        {
            hx1[i]=hx[i];hy1[i]=hy[i];
            if(GetAsyncKeyState(VK_ESCAPE))
                goto INC1;
            if(GetAsyncKeyState(VK_SPACE))
                Sleep(200);
            if(i==0)
            {
                if(GetAsyncKeyState(VK_UP))     d1[i]=1;//Directiile
                if(GetAsyncKeyState(VK_DOWN))   d1[i]=3;
                if(GetAsyncKeyState(VK_LEFT))   d1[i]=4;
                if(GetAsyncKeyState(VK_RIGHT))  d1[i]=2;
            }else
            if(i==1)
            {
                if(GetAsyncKeyState(0x57))  d1[i]=1;//Directiile
                if(GetAsyncKeyState(0x53))  d1[i]=3;
                if(GetAsyncKeyState(0x41))  d1[i]=4;
                if(GetAsyncKeyState(0x44))  d1[i]=2;
            }
            if(i==2)
            {
                if(GetAsyncKeyState(0x49))  d1[i]=1;//Directiile
                if(GetAsyncKeyState(0x4B))  d1[i]=3;
                if(GetAsyncKeyState(0x4A))  d1[i]=4;
                if(GetAsyncKeyState(0x4C))  d1[i]=2;
            }
            if((d1[i]!=d[i])&&((d1[i]%2==0&&d[i]%2!=0)||(d1[i]%2!=0&&d[i]%2==0))||(sc[i]==0))
                d[i]=d1[i];
            s[hx[i]][hy[i]]=d[i];
            switch(d[i])
            {
            case 1:hy[i]--;break;
            case 2:hx[i]++;break;
            case 3:hy[i]++;break;
            case 4:hx[i]--;break;
            }//Noua pozitie a capului
            if(p==false)
            {
                if(hx[i]==lx+1)hx[i]=1;
                if(hy[i]==ly+1)hy[i]=1;
                if(hx[i]==0)hx[i]=lx;
                if(hy[i]==0)hy[i]=ly;
            }
            for(j=0;j<z;j++)if(j!=i)s[hx[j]][hy[j]]=8;
            if(s[hx[i]][hy[i]]!=0)
            {
                if(s[hx[i]][hy[i]]==5)//Nou mar..........................................................................
                {
                    sc[i]++;t-=1;ret:
                    ax=rand()%(lx-3)+1;ay=rand()%(ly-3)+1;
                    color(cm);gotoxy(ax,ay);
                    if(s[ax][ay]!=0)
                        goto ret;
                    cout<<'X';s[ax][ay]=5;color(cf);
                }else
                if(hx[i]==tx[i]&&hy[i]==ty[i])
                    tail(i);
                else
                    goto FIN;
            }
            else// stergem coada si inlocuim pozitia ei.................................................................
                tail(i);
            if(sc[i]>0){
                color(cs);// schimba culoarea capului
                gotoxy(hx1[i],hy1[i]);cout<<'0';
            }
            color(cc);gotoxy(hx[i],hy[i]);cout<<'0';//CAPUL
            color(cf);gotoxy(lx+15,3);cout<<hs;gotoxy(lx+10,4);cout<<sc[0]+sc[1];
            gotoxy(lx+12,5);cout<<"   ";gotoxy(lx+12,5);cout<<ti-t;
        }
        Sleep(t);
    }
    FIN:if(sc[0]+sc[1]>hs)hs=sc[0]+sc[1];goto INC;FIN1:
    return 0;
}
void color(int c)
{
    SetConsoleTextAttribute(hout,c);
}
void gotoxy(int x,int y)
{
    COORD coord;coord.X=x;coord.Y=y;
    SetConsoleCursorPosition(hout,coord);
}
void border(int lx,int ly)
{
    color(cb);gotoxy(0,0);
    for(i=0;i<lx+2;i++)cout<<'-';
    cout<<'\n';
    for(i=0;i<ly;i++)
    {
        cout<<'|';
        for(j=0;j<lx;j++)
            cout<<' ';
        cout<<"|\n";
    }
    for(i=0;i<lx+2;i++)cout<<'-';
}
void tail(int i)
{
    color(cf);
    tx1[i]=tx[i];ty1[i]=ty[i];
    gotoxy(tx[i],ty[i]);cout<<' ';
    if(s[tx[i]][ty[i]]==1)ty[i]--;else
    if(s[tx[i]][ty[i]]==2)tx[i]++;else
    if(s[tx[i]][ty[i]]==3)ty[i]++;else
    if(s[tx[i]][ty[i]]==4)tx[i]--;
    if(p==false)
    {
        if(tx[i]==lx+1)tx[i]=1;
        if(ty[i]==ly+1)ty[i]=1;
        if(tx[i]==0)tx[i]=lx;
        if(ty[i]==0)ty[i]=ly;
    }
    s[tx1[i]][ty1[i]]=0;
}
