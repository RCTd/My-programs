#include <iostream>
#include <ctime>
#include <windows.h>
#define LX 10
#define LY 10
using namespace std;
INPUT_RECORD InputRecord;DWORD Events;
HANDLE hout =GetStdHandle(STD_OUTPUT_HANDLE);
HANDLE hin =GetStdHandle(STD_INPUT_HANDLE);
void gotoxy(int x,int y);void border(int lx,int ly);
void color(int c);void tail();
int lx=LX,ly=LY,hx,hy,ax,ay,tx,ty,tx1,ty1,i,j,d,sc,d1;
int t,ti=200,hs=0,cc=170,cs=255,cf=15,cm=204,bx,by,p1=0;
int s[50][50],hx1,hy1;
bool g,p=true;
int main()
{
    SMALL_RECT DisplayArea= {0,0,lx+25,ly+3};
    SetConsoleWindowInfo(hout,TRUE,&DisplayArea);
    //cout<<"LaturaX:";cin>>lx;
    //cout<<"LaturaY:";cin>>ly;
    //cout<<"Speed:";cin>>ti;
    INC:srand (time(NULL));
    d=1;sc=0;d1=1;t=ti;g=false;
    system("CLS");
    if(p1==0)
    {
        color(12);cout<<"Wall";
    }else
    {
        color(cf);cout<<"Wall or ";
        color(12);cout<<"not";
    }color(cf);cout<<" or not (use arrows and enter)";
    while(!GetAsyncKeyState(VK_RETURN))
    {
        if(GetAsyncKeyState(VK_RIGHT)&&p1==0)
        {
            gotoxy(0,0);p1=1;
            color(cf);cout<<"Wall or ";
            color(12);cout<<"not";
        }
        if(GetAsyncKeyState(VK_LEFT)&&p1==1)
        {
            gotoxy(0,0);p1=0;
            color(12);cout<<"Wall";
            color(cf);cout<<" or not";
        }
    }if(p1==0)p=true;else p=false;
    color(cf);
    system("CLS");
    gotoxy(lx+5,3);cout<<"High scor ";
    gotoxy(lx+5,4);cout<<"Scor ";
    gotoxy(lx+5,5);cout<<"Speed ";
    for(i=0;i<ly+1;i++)for(j=0;j<lx+1;j++)s[j][i]=0;//initializam vectorul 2D cu 0
    for(i=0;i<lx+1;i++){s[i][0]=7;s[i][ly+1]=7;}//  initializam marginile
    for(i=0;i<ly+1;i++){s[0][i]=7;s[lx+1][i]=7;}
    border(lx,ly);
    hx=lx/2;hy=ly/2;tx=hx;ty=hy;// mijlocul terenului
    ax=rand()%(lx)+1;ay=rand()%(ly)+1;// primul mar
    color(cm);gotoxy(ax,ay);cout<<'X';
    color(cf);s[ax][ay]=5;
    while(g==false)
    {
        hx1=hx;hy1=hy;
        if(GetAsyncKeyState(VK_UP))     d1=1;//Directiile
        if(GetAsyncKeyState(VK_DOWN))   d1=3;
        if(GetAsyncKeyState(VK_LEFT))   d1=4;
        if(GetAsyncKeyState(VK_RIGHT))  d1=2;
        if((d1!=d)&&((d1%2==0&&d%2!=0)||(d1%2!=0&&d%2==0))||(sc==0))
            d=d1;
        s[hx][hy]=d;
        switch(d)
        {
        case 1:hy--;break;
        case 2:hx++;break;
        case 3:hy++;break;
        case 4:hx--;break;
        }//Noua pozitie a capului
        if(p==false)
        {
            if(hx==lx+1)hx=1;
            if(hy==ly+1)hy=1;
            if(hx==0)hx=lx;
            if(hy==0)hy=ly;
        }
        if(s[hx][hy]!=0)
        {
            if(s[hx][hy]==5)//Nou mar
            {
                sc++;
                t-=2;
                RET:
                ax=rand()%(lx-3)+1;
                ay=rand()%(ly-3)+1;
                if(s[ax][ay]!=0||ax>lx-2||ay>ly-2)
                    goto RET;
                color(cm);
                gotoxy(ax,ay);cout<<'X';
                s[ax][ay]=5;
                color(cf);
            }else
            if(hx==tx&&hy==ty)
                tail();
            else
                goto FIN;
        }
        else// stergem coada si inlocuim pozitia ei
            tail();
        if(sc>0){
            color(cs);// schimba culoarea capului
            gotoxy(hx1,hy1);cout<<'0';
        }
        color(cc);
        gotoxy(hx,hy);cout<<'0';//CAPUL
        color(cf);
        gotoxy(lx+15,3);cout<<hs;
        gotoxy(lx+10,4);cout<<sc;
        gotoxy(lx+12,5);cout<<"   ";
        gotoxy(lx+12,5);cout<<ti-t;
        Sleep(t);
    }
    FIN:
    if(sc>hs)// schimbam scorul maxim
        hs=sc;
    goto INC;
    return 0;
}
void color(int c)
{
    SetConsoleTextAttribute(hout,c);
}
void gotoxy(int x,int y)
{
    COORD coord;
    coord.X=x;
    coord.Y=y;
    SetConsoleCursorPosition(hout,coord);
}
void border(int lx,int ly)
{
    gotoxy(0,0);
    for(i=0;i<lx+2;i++)
        cout<<'-';
    cout<<'\n';
    for(i=0;i<ly;i++)
    {
        cout<<'|';
        for(j=0;j<lx;j++)
            cout<<' ';
        cout<<"|\n";
    }
    for(i=0;i<lx+2;i++)
        cout<<'-';
}
void tail()
{
    color(cf);
    tx1=tx;ty1=ty;
    gotoxy(tx,ty);cout<<' ';
    if(s[tx][ty]==1)ty--;else
    if(s[tx][ty]==2)tx++;else
    if(s[tx][ty]==3)ty++;else
    if(s[tx][ty]==4)tx--;
    if(p==false)
    {
        if(tx==lx+1)tx=1;
        if(ty==ly+1)ty=1;
        if(tx==0)tx=lx;
        if(ty==0)ty=ly;
    }
    s[tx1][ty1]=0;
}
