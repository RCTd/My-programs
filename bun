#include <iostream>
#include <fstream>
#include <conio.h>
#include <windows.h>
#define LATIME 79// 79-maxim
#define INALTIME 58// 58-maxim
#define INTARZIERE 80//80-recomandat
HANDLE hOut;
char m[INALTIME][LATIME];
int n[INALTIME][LATIME];
using namespace std;
int c=240,v,aci;char ch='0',yo;bool start=true,bucla=false;;
ofstream g,g1,g2;ifstream f1,f;
string fn,fm,fm1;
void name2()
{
    fm="C:/"+fm;
    fn=fm+"n.txt";fm1=fm+"d.txt";fm=fm+".txt";
}
void inst()
{
    SetConsoleTextAttribute(hOut,240);
    cout<<"Use arrow keys to move the red dot; CTRL to exit;";
    cout<<"\nTAB to drow; ESC to enter meniu; SHIFT to erase;";
    cout<<"\nH-to change the character; D-to change the colorc;";
}
void aga()
{
    system("CLS");
    for(int i=0; i<INALTIME-1; i++)
    {
        for(int j=0; j<LATIME; j++)
        {
            int y=n[i][j];
            SetConsoleTextAttribute(hOut,y);
            cout<<m[i][j];
        }
        cout<<"\n";
    }
    inst();
}
void gotoxy(int x,int y)
{
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(hOut,coord);
}
void name()
{
    system("CLS");
    gotoxy(LATIME/2-15,23);
    cout<<"Enter name fo file: ";
}
void open()
{
    name();cin>>fm;name2();
    system("CLS");
    f.open(fm.c_str());
    f1.open(fn.c_str());
    if (f.is_open())
    {
        for(int i=0; i<INALTIME-1; i++)
        {
            for(int j=0; j<LATIME; j++)
            {
                f1>>c;n[i][j]=c;f>>aci;
                m[i][j]=aci;
                SetConsoleTextAttribute(hOut,c);
                cout<<m[i][j];
            }
            cout<<"\n";
        }
        inst();
    }
    else
    {
        system("CLS");
        gotoxy(LATIME/2-20,23);
        cout<<"Unable to find file. Continue?y/n ";
        cin>>yo;
        if(yo=='y')
            open();
        else
            aga();
    }
    f.close();f1.close();bucla=true;
}
void save()
{
    name();cin>>fm;name2();
    g.open(fm.c_str());
    g1.open(fn.c_str());
    g2.open(fm1.c_str());
    if (f.is_open())
    for(int i=0; i<INALTIME; i++)
    {
        for(int j=0; j<LATIME; j++)
        {
            g<<+m[i][j];g<<"\n";
            g1<<n[i][j];g1<<"\n";
            g2<<m[i][j];
        }
        g2<<"\n";
    }
    else
    {
        system("CLS");
        gotoxy(LATIME/2-20,23);
        cout<<"Unable to find file. Continue?y/n ";
        cin>>yo;
        if(yo=='y')
            save();
        else
            aga();
    }
    g.close();g1.close();g2.close();
    aga();bucla=true;
}
void del()
{
    name();cin>>fm;name2();
    remove(fm.c_str());
    if((remove(fm.c_str())!=0)&&(remove(fm1.c_str())!=0)&&(remove(fn.c_str())!=0))
    {
        gotoxy(LATIME/2-20,23);
        cout<<"Unable to find file. Continue?y/n ";
        cin>>yo;
        if(yo=='y')
            del();
    }
    aga();bucla=true;
}
void border()
{
    system("CLS");
    for(int i=0;i<INALTIME;i++)
        for(int j=0;j<LATIME;j++)
            n[i][j]=240;
    SetConsoleTextAttribute(hOut,240);
    for(int i=0;i<LATIME-1;++i)
    {
        cout<<'-';
        m[0][i]='-';
    }
    for(int i=0;i<INALTIME-2;++i)
    {
        cout<<"\n|";
        m[i+1][0]='|';
        for(int j=0;j<LATIME-3;++j)
        {
            cout<<' ';
            m[i+1][j+1]=' ';
        }
        cout<<"|";
        m[i+1][LATIME-2]='|';
    }
    cout<<"\n";
    for(int i=0;i<LATIME-1;++i)
    {
        cout<<'-';
        m[INALTIME-2][i]='-';
    }
    cout<<"\n";inst();
}
void mena()
{
    system("CLS");
    char q='0';
    int select=0;bucla=false;
    while (bucla==false)
    {
        system("color f7");
        SetConsoleTextAttribute(hOut,240);
        gotoxy(LATIME/2-10,17);
        cout<<"SELECT OPTION:";
        gotoxy(LATIME/2-3,27);
        cout<<"CLEAR THE SCREEN";
        gotoxy(LATIME/2-3,21);
        cout<<"OPEN A FILE";
        gotoxy(LATIME/2-3,23);
        cout<<"SAVE THE FILE";
        gotoxy(LATIME/2-3,25);
        cout<<"DELETE A FILE";
        gotoxy(LATIME/2-3,19);
        cout<<"EXIT MENIU";
        gotoxy(LATIME/2-3,29);
        cout<<"EXIT PROGRAM";
        while (q!=char(13))
        {
            SetConsoleTextAttribute(hOut,242);
            gotoxy(LATIME/2-6,19+select);
            cout<<"->";
            gotoxy(0,0);
            q=getch();
            SetConsoleTextAttribute(hOut,240);
            gotoxy(LATIME/2-6,19+select);
            cout<<"  ";
            if (q==0x50)
                if (select<10)
                    select+=2;
            if (q==0x48)
                if (select>0)
                    select-=2;
        }
        switch(select)
        {
            case 8://C
                border();
                bucla=true;
                break;
            case 2://O
                open();
                break;
            case 4://S
                save();
                break;
            case 6://Q
                del();
                /*name();cin>>fm;name2();
                remove(fm.c_str());remove(fm1.c_str());remove(fn.c_str());
                aga();bucla=true;*/
                break;
            case 0://E
                aga();
                bucla=true;
                break;
            case 10://ESC
                start=false;
                bucla=true;
                break;
        }
    }
}
struct ball
{
    float x,y,ox,oy;
    ball(int _x,int _y)
    {
        x=float(_x);
        y=float(_y);
    }
    void draw()
    {
        int b=244+8;
        COORD p;
        p.X=int(ox);
        p.Y=int(oy);
        SetConsoleCursorPosition(hOut,p);
        if(GetAsyncKeyState(VK_TAB))
        {
            if((c!=241)&&(c==b))
                b=241;
            SetConsoleTextAttribute(hOut,c);//c
            cout<<ch;
            n[p.Y][p.X]=c;
            m[p.Y][p.X]=ch;
        }
        else
        {
            if(m[p.Y][p.X]==' ')
            {
                SetConsoleTextAttribute(hOut,n[p.Y][p.X]);
                cout<<' ';
                m[p.Y][p.X]=' ';
            }
            else
            {
                if((n[p.Y][p.X]!=241)&&(n[p.Y][p.X]==b))
                        b=241;
                if(GetAsyncKeyState(VK_SHIFT))
                {
                    SetConsoleTextAttribute(hOut,240);
                    cout<<' ';
                    m[p.Y][p.X]=' ';
                }
                else
                {
                    SetConsoleTextAttribute(hOut,n[p.Y][p.X]);
                    cout<<m[p.Y][p.X];
                }
            }
        }
        p.X=int(x);
        p.Y=int(y);
        SetConsoleCursorPosition(hOut,p);
        SetConsoleTextAttribute(hOut,b);
        cout<<'0';
        ox=x;
        oy=y;
    }
};
int main()
{
    system("color f7");
    hOut=GetStdHandle(STD_OUTPUT_HANDLE);
    SMALL_RECT DisplayArea= {0,0,LATIME,INALTIME+3};
    SetConsoleWindowInfo(hOut,TRUE,&DisplayArea);
    COORD f;f.Y=INALTIME+1;f.X=50;
    ball b(LATIME/2-1,INALTIME/2);border();
    while(start==true)
    {
        if(GetAsyncKeyState(VK_RIGHT)&&b.x!=LATIME-3)
            b.x+=1;
        else if(GetAsyncKeyState(VK_LEFT)&&b.x!=1)
            b.x-=1;
        if(GetAsyncKeyState(VK_DOWN)&&b.y!=INALTIME-3)
            b.y+=1;
        else if(GetAsyncKeyState(VK_UP)&&b.y!=1)
            b.y-=1;
        if(GetAsyncKeyState(0x48))//H
        {
            SetConsoleCursorPosition(hOut,f);
            cout<<"Select character: ";cin>>ch;
            SetConsoleCursorPosition(hOut,f);
            cout<<"                   ";
        }
        if(GetAsyncKeyState(0x44))//D
        {
            int t=4,a=247/t-t-1;
            system("CLS");
            for(int i=-8; i!=a; i++)
            {
                for(int c=0; c<t; c++)
                {
                    SetConsoleTextAttribute(hOut,i+c*(a+8)+8);
                    cout<<i+c*(a+8)<<" for this color; ";
                }
                cout<<"\n";
            }
            SetConsoleTextAttribute(hOut,244);
            cin>>c;c+=8;aga();
        }
        if(GetAsyncKeyState(0x52))
        {
            v=c;c=240;
        }
        if(GetAsyncKeyState(0x51))
            c=v;
        if(GetAsyncKeyState(VK_ESCAPE))
            mena();
        b.draw();
        Sleep(INTARZIERE);
    }
}
